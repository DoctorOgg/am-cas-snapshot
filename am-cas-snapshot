#!/usr/bin/env perl

# Invoked by AMANDA backup plugin as :
#   Spawning "/usr/libexec/amanda/application/am-cas-snapshot am-cas-snapshot POST-DLE-BACKUP --execute-where client --log /var/log/am-cas-snapshot.log"
#
# Requires the following permissions in sudoers
# Cmnd_Alias DEPLOYMENT_MANAGER = /var/sky/mongo/scripts/backup/mongo_backup.sh, \
#    /sbin/service mongod *, \
#    /sbin/lvcreate -s -n mongo-snap -L * /dev/vgdb/lvol1, \
#    /sbin/lvremove -f /dev/vgdb/mongo-snap, \
#		 /sbin/lvdisplay *, \
#    /bin/umount /dev/vgdb/mongo-snap, \
#		 /bin/mount /dev/vgdb/mongo-snap *
#

use Getopt::Long;
use File::Path;
$| = 1;

GetOptions(
    "execute-where=s" => \$where,
    "config=s"        => \$config,
    "host=s"          => \$host,
    "disk=s"          => \$disk,
    "device=s"        => \$device,
    "level=i"         => \$level,
    "log=s"           => \$logFile,
    "database=s"      => \$database
) || die "Incorrect options passed to script\n";
use POSIX qw/strftime/;
my $dateString = strftime "%d/%m/%Y %H:%M:%S", localtime;
open( LOG, ">>$logFile" ) || die "Cannot open log file $logFile for writing\n";
select LOG;
$dle = $ARGV[0];

sub pre_backup {
    my $method = $_[0];
    $prebackupCmd = "sudo /usr/bin/nodetool snapshot";
    open( CMD, "$prebackupCmd |" ) || die "Cannot execute command:\n $prebackupCmd\n";
    while (<CMD>) {
        print;
    }
    close CMD;
    if ( $? != 0 ) {
        exit 1;
    }

}

sub post_backup {
    my $method = $_[0];
    $postbackupCmd = "sudo /usr/bin/nodetool clearsnapshot";
    open( CMD, "$postbackupCmd|" ) || die "Cannot execute command:\n $postbackupCmd\n";
    while (<CMD>) {
        print;
    }
    close CMD;
    if ( $? != 0 ) {
        exit 1;
    }

}

if ( $dle eq "PRE-DLE-BACKUP" ) {
    pre_backup($method);
}
elsif ( $dle eq "POST-DLE-BACKUP" ) {
    post_backup($method);
}
else {
    die "No DLE-BACKUP parameter set; exiting\n";
}

close LOG;
